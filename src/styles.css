/* You can add global styles to this file, and also import other style files */
*:not(head, style, script, svg, svg *, ul, li),
*::before,
*::after {
  all: unset;
  box-sizing: border-box;
  font-family: "Inter", sans-serif;
  font-optical-sizing: auto;
  font-weight: 200;
  font-style: normal;
  font-variation-settings: "slnt" 0;
  color: var(--text-1);
}

ul {
  padding-inline-start: max(1em, 1rem);
  margin: 0;
  font-size: var(--text-sm);
}

a,
button {
  cursor: pointer;
}

@media (prefers-color-scheme: dark) {
  :root:not([data-theme]),
  [data-theme="dark"] {
    color-scheme: dark;

    --base-values: 25, 25, 25;
    --primary-values: 219, 127, 142;
    --neutral-values: 230, 230, 230;
  }
}

[data-theme="dark"] {
  color-scheme: dark;

  --base-values: 25, 25, 25;
  --primary-values: 219, 127, 142;
  --neutral-values: 230, 230, 230;
}

@media (prefers-color-scheme: light) {
  :root:not([data-theme]),
  [data-theme="light"] {
    color-scheme: light;

    --base-values: 230, 230, 230;
    --primary-values: 206, 80, 101;
    --neutral-values: 25, 25, 25;
  }
}

[data-theme="light"] {
  color-scheme: light;

  --base-values: 230, 230, 230;
  --primary-values: 206, 80, 101;
  --neutral-values: 25, 25, 25;
}

:root {
  /* set base values */
  --text-base-size: 1rem;
  --text-scale-ratio: 1.2;

  /* set colors */
  --base: rgb(var(--base-values));
  --primary: rgb(var(--primary-values));
  --primary-hover: rgba(var(--primary-values), 0.8);
  --neutral: rgb(var(--neutral-values));

  --text: rgba(var(--neutral-values), 0.8);
  --text-2: rgba(var(--neutral-values), 0.6);

  --surface: rgba(var(--primary-values), 0.05);
  --border: rgba(var(--primary-values), 0.15);

  --box-shadow: 0px 5px 10px rgba(var(--primary-values), 0.05);
  --box-shadow-hover: 0px 5px 15px rgba(var(--primary-values), 0.15);

  --mobile-breakpoint: 600px;

  background-color: var(--base);
  color: var(--text);

  /* type scale */
  --text-xs: calc(
    var(--text-base-size) / (var(--text-scale-ratio) * var(--text-scale-ratio))
  );
  --text-sm: calc(var(--text-base-size) / var(--text-scale-ratio));
  --text-md: calc(var(--text-base-size) * var(--text-scale-ratio));
  --text-lg: calc(
    var(--text-base-size) * var(--text-scale-ratio) * var(--text-scale-ratio)
  );
  --text-xl: calc(
    var(--text-base-size) * var(--text-scale-ratio) * var(--text-scale-ratio) *
      var(--text-scale-ratio)
  );
  --text-xxl: calc(
    var(--text-base-size) * var(--text-scale-ratio) * var(--text-scale-ratio) *
      var(--text-scale-ratio) * var(--text-scale-ratio)
  );
  --text-xxxl: calc(
    var(--text-base-size) * var(--text-scale-ratio) * var(--text-scale-ratio) *
      var(--text-scale-ratio) * var(--text-scale-ratio) *
      var(--text-scale-ratio)
  );

  /* spacing values */
  --space-xxxs: 0.25em;
  --space-xxs: 0.375em;
  --space-xs: 0.5em;
  --space-sm: 0.75em;
  --space-md: 1.25em;
  --space-lg: 2em;
  --space-xl: 3.25em;
  --space-xxl: 5.25em;
  --space-xxxl: 8.5em;
}

html,
body {
  margin: 0px;
  padding: 0px;
  display: contents;
  scroll-padding-top: 1rem;
}

*::-webkit-scrollbar {
  width: 0px;
  height: 0px;
}

.icon {
  --size: auto;
  display: inline-block;
  width: var(--size);
  height: var(--size);
}

.icon svg {
  width: 100%;
  height: 100%;
}

.icon img {
  width: 100%;
  height: 100%;
  object-fit: contain;
}

.icon.currentColor svg {
  fill: currentColor;
}

.icon.currentColor > svg * {
  fill: currentColor !important;
}

.icon.fade {
  position: absolute;
  inset: var(--space-sm);
  left: unset;
  max-width: calc(100% - var(--space-sm) * 2);
  max-height: calc(100% - var(--space-sm) * 2);
  z-index: -1;
}

.icon.fade::before {
  content: "";
  position: absolute;
  inset: 0;
  background: linear-gradient(
    90deg,
    var(--base),
    rgba(var(--base-values), var(--iconopacity)) 100%
  );
}

button {
  all: unset;
  padding: 0.25rem;
  border-radius: 50%;
  cursor: pointer;
  background-color: var(--primary);
  color: var(--neutral);
  fill: var(--neutral);
  transition-duration: 200ms;
  transition-property: color, background-color, fill, stroke;
}

button:hover {
  background-color: var(--primary-hover);
  color: var(--text);
  fill: var(--text);
}

.content-grid {
  --padding-inline: 1rem;
  --content-max-width: 770px;
  --breakout-max-width: 900px;

  --breakout-size: calc(
    (var(--breakout-max-width) - var(--content-max-width)) / 2
  );

  display: grid;
  row-gap: 1rem;
  grid-template-rows: min-content;
  grid-template-columns:
    [full-width-start]
    minmax(var(--padding-inline), 1fr)
    [breakout-start]
    minmax(0, var(--breakout-size))
    [content-start]
    min(100% - (var(--padding-inline) * 2), var(--content-max-width))
    [content-end]
    minmax(0, var(--breakout-size))
    [breakout-end]
    minmax(var(--padding-inline), 1fr)
    [full-width-end];
}

.content-grid > :not(.breakout, .full-width) {
  grid-column: content;
}

.content-grid > .breakout {
  grid-column: breakout;
}

.content-grid > .full-width {
  grid-column: full-width;
}

.row {
  display: flex;
  gap: var(--space-md);
  flex-flow: row;
}

.row.md {
  flex-flow: column;
}
.row.md.reverse {
  flex-flow: column-reverse;
}

.column {
  display: flex;
  flex-flow: column;
  gap: var(--space-md);
}

.column.sm {
  display: flex;
  flex-flow: column;
  gap: var(--space-sm);
}

.divider {
  position: relative;
  display: block;
  width: 100%;
}

.divider::before {
  content: "";
  position: absolute;
  inset: 0%;
  top: calc(50% - 0.5px);
  bottom: calc(50% - 0.5px);
  background: linear-gradient(
    270deg,
    rgba(var(--primary-values), 0) 0%,
    rgba(var(--primary-values), 0.5) 20%,
    rgba(var(--primary-values), 0.5) 80%,
    rgba(var(--primary-values), 0) 100%
  );
}

img {
  overflow-clip-margin: content-box;
  overflow: clip;
  object-fit: contain;
  object-position: center;
}

h1,
h2,
h3 {
  color: var(--neutral);
}

h1 {
  font-size: var(--text-xxxl);
}

h2 {
  font-size: var(--text-xxl);
}

h3 {
  font-size: var(--text-lg);
}

p {
  font-size: var(--text-sm);
}

i {
  font-size: var(--text-xs);
  color: var(--text-2);
}

h1,
h2,
h3,
h4,
p,
div {
  display: block;
}

.firefly {
  position: absolute;
  width: 32px;
  height: 32px;
  left: 0;
  top: 0;
  z-index: -1;
  filter: grayscale(1) invert(65%) contrast(100%);
  opacity: 0.6;
}

@media (min-width: 600px) {
  .row.md {
    flex-flow: row;
  }
  .row.md.reverse {
    flex-flow: row-reverse;
  }
}
